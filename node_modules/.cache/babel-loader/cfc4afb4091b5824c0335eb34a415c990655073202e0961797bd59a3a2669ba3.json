{"ast":null,"code":"var _jsxFileName = \"/home/nani/my-stud/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport StudentForm from \"./StudentForm\";\nimport StudentList from \"./StudentList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [editingStudent, setEditingStudent] = useState(null);\n  useEffect(() => {\n    const storedStudents = localStorage.getItem(\"students\");\n    if (storedStudents) {\n      setStudents(JSON.parse(storedStudents));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"students\", JSON.stringify(students));\n  }, [students]);\n  const addStudent = student => {\n    setStudents([...students, {\n      ...student,\n      id: Date.now()\n    }]);\n  };\n  const updateStudent = updatedStudent => {\n    setStudents(students.map(stu => stu.id === updatedStudent.id ? updatedStudent : stu));\n    setEditingStudent(null);\n  };\n  const deleteStudent = id => {\n    setStudents(students.filter(stu => stu.id !== id));\n  };\n  const editStudent = student => {\n    setEditingStudent(student);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-lg mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \" Student Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentForm, {\n      addStudent: addStudent,\n      updateStudent: updateStudent,\n      editingStudent: editingStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n      students: students,\n      deleteStudent: deleteStudent,\n      editStudent: editStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O4XBVLxHK7eIdULkHBIasTQbE+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StudentForm","StudentList","jsxDEV","_jsxDEV","App","_s","students","setStudents","editingStudent","setEditingStudent","storedStudents","localStorage","getItem","JSON","parse","setItem","stringify","addStudent","student","id","Date","now","updateStudent","updatedStudent","map","stu","deleteStudent","filter","editStudent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nani/my-stud/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport StudentForm from \"./StudentForm\";\nimport StudentList from \"./StudentList\";\n\nfunction App() {\n  const [students, setStudents] = useState([]);\n  const [editingStudent, setEditingStudent] = useState(null);\n  useEffect(() => {\n    const storedStudents = localStorage.getItem(\"students\");\n    if (storedStudents) {\n      setStudents(JSON.parse(storedStudents));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"students\", JSON.stringify(students));\n  }, [students]);\n  const addStudent = (student) => {\n    setStudents([...students, { ...student, id: Date.now() }]);\n  };\n  const updateStudent = (updatedStudent) => {\n    setStudents(\n      students.map((stu) =>\n        stu.id === updatedStudent.id ? updatedStudent : stu\n      )\n    );\n    setEditingStudent(null);\n  };\n  const deleteStudent = (id) => {\n    setStudents(students.filter((stu) => stu.id !== id));\n  };\n  const editStudent = (student) => {\n    setEditingStudent(student);\n  };\n\n  return (\n    <div className=\"p-6 max-w-lg mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\"> Student Management Dashboard</h1>\n\n      <StudentForm\n        addStudent={addStudent}\n        updateStudent={updateStudent}\n        editingStudent={editingStudent}\n      />\n\n      <StudentList\n        students={students}\n        deleteStudent={deleteStudent}\n        editStudent={editStudent}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1DC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAClBH,WAAW,CAACM,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;EACNX,SAAS,CAAC,MAAM;IACdY,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACV,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,MAAMW,UAAU,GAAIC,OAAO,IAAK;IAC9BX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAE,GAAGY,OAAO;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC;EAC5D,CAAC;EACD,MAAMC,aAAa,GAAIC,cAAc,IAAK;IACxChB,WAAW,CACTD,QAAQ,CAACkB,GAAG,CAAEC,GAAG,IACfA,GAAG,CAACN,EAAE,KAAKI,cAAc,CAACJ,EAAE,GAAGI,cAAc,GAAGE,GAClD,CACF,CAAC;IACDhB,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EACD,MAAMiB,aAAa,GAAIP,EAAE,IAAK;IAC5BZ,WAAW,CAACD,QAAQ,CAACqB,MAAM,CAAEF,GAAG,IAAKA,GAAG,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;EACD,MAAMS,WAAW,GAAIV,OAAO,IAAK;IAC/BT,iBAAiB,CAACS,OAAO,CAAC;EAC5B,CAAC;EAED,oBACEf,OAAA;IAAK0B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC3B,OAAA;MAAI0B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1E/B,OAAA,CAACH,WAAW;MACViB,UAAU,EAAEA,UAAW;MACvBK,aAAa,EAAEA,aAAc;MAC7Bd,cAAc,EAAEA;IAAe;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAEF/B,OAAA,CAACF,WAAW;MACVK,QAAQ,EAAEA,QAAS;MACnBoB,aAAa,EAAEA,aAAc;MAC7BE,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CA/CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}